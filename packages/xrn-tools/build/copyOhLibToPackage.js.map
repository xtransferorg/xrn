{"version":3,"file":"copyOhLibToPackage.js","sourceRoot":"","sources":["../src/copyOhLibToPackage.ts"],"names":[],"mappings":";;;;;;AAAA,wDAA0B;AAC1B,gDAAwB;AAExB,2CAAsC;AAEtC,mCAA+C;AAExC,MAAM,kBAAkB,GAAG,KAAK,EAAE,EACvC,WAAW,EACX,iBAAiB,GACF,EAAE,EAAE;IACnB,MAAM,WAAW,GAAG,MAAM,IAAA,4BAAoB,EAAC,WAAW,CAAC,CAAC;IAC5D,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,OAAO,CAAC,KAAK,CAAC,WAAW,WAAW,yBAAyB,CAAC,CAAC;QAC/D,OAAO;IACT,CAAC;IACD,MAAM,SAAS,GAAG,cAAI,CAAC,IAAI,CAAC,mBAAO,EAAE,YAAY,CAAC,CAAC;IACnD,MAAM,WAAW,GAAG,cAAI,CAAC,IAAI,CAAC,mBAAO,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC7D,MAAM,kBAAkB,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAC7D,MAAM,sBAAsB,GAAG,cAAI,CAAC,IAAI,CACtC,SAAS,EACT,WAAW,iBAAiB,kCAAkC,iBAAiB,MAAM,CACtF,CAAC;IAEF,IAAI,CAAC,kBAAE,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC;QAC3C,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;IAChD,CAAC;IACD,IAAI,CAAC,kBAAE,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE,CAAC;QACvC,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;IACtD,CAAC;IACD,2FAA2F;IAC3F,kBAAE,CAAC,YAAY,CACb,sBAAsB,EACtB,GAAG,kBAAkB,IAAI,iBAAiB,MAAM,CACjD,CAAC;AACJ,CAAC,CAAC;AA5BW,QAAA,kBAAkB,sBA4B7B","sourcesContent":["import fs from \"fs-extra\";\nimport path from \"path\";\n\nimport { XRN_DIR } from \"./Constants\";\nimport { HarmonyLibInfo } from \"./types\";\nimport { findWorkspacePackage } from \"./utils\";\n\nexport const copyOhLibToPackage = async ({\n  packageName,\n  harmonyModuleName,\n}: HarmonyLibInfo) => {\n  const packageInfo = await findWorkspacePackage(packageName);\n  if (!packageInfo) {\n    console.error(`Package ${packageName} not found in workspace`);\n    return;\n  }\n  const xrngoPath = path.join(XRN_DIR, \"apps/xrngo\");\n  const packagePath = path.join(XRN_DIR, packageInfo.location);\n  const packageHarmonyPath = path.join(packagePath, \"harmony\");\n  const xrngoHarmonyLibHarPath = path.join(\n    xrngoPath,\n    `harmony/${harmonyModuleName}/build/default/outputs/default/${harmonyModuleName}.har`\n  );\n\n  if (!fs.existsSync(xrngoHarmonyLibHarPath)) {\n    throw new Error(\"Harmony lib har not exists\");\n  }\n  if (!fs.existsSync(packageHarmonyPath)) {\n    throw new Error(\"Harmony lib not found in package\");\n  }\n  // fs.renameSync(xrngoHarmonyLibHarPath, `${packageHarmonyPath}/${harmonyModuleName}.har`);\n  fs.copyFileSync(\n    xrngoHarmonyLibHarPath,\n    `${packageHarmonyPath}/${harmonyModuleName}.har`\n  );\n};\n"]}