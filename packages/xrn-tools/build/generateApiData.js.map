{"version":3,"file":"generateApiData.js","sourceRoot":"","sources":["../src/generateApiData.ts"],"names":[],"mappings":"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","sourcesContent":["import path from \"path\";\nimport { XRN_DIR, PACKAGES_DIR } from \"./Constants\";\nimport { Application, TSConfigReader, TypeDocReader } from \"typedoc\";\nimport recursiveOmitBy from \"recursive-omit-by\";\nimport fs from \"fs-extra\";\nimport { GenerateApiDataOptions } from \"./types\";\n\nconst MINIFY_JSON = true;\n\nexport const generateApiData = async (opts: GenerateApiDataOptions) => {\n  const { packageName, entryPoint = 'index.tsx', sdk } = opts;\n  const dataPath = path.join(\n    XRN_DIR,\n    \"docs\",\n    \"public\",\n    \"static\",\n    \"data\",\n    // \"v1.0.0\" // todo\n    sdk ? `v${sdk}.0.0` : `unversioned`\n  );\n\n  const jsonFileName = packageName;\n  const basePath = path.join(PACKAGES_DIR, packageName);\n  const entriesPath = path.join(basePath, \"src\");\n  const tsConfigPath = path.join(basePath, \"tsconfig.json\");\n  const jsonOutputPath = path.join(dataPath, `${jsonFileName}.json`);\n\n  const entryPoints = Array.isArray(entryPoint)\n    ? entryPoint.map((entry) => path.join(entriesPath, entry))\n    : [path.join(entriesPath, entryPoint)];\n\n  // console.log(entriesPath);\n\n  const app = await Application.bootstrapWithPlugins(\n    {\n      entryPoints,\n      tsconfig: tsConfigPath,\n      disableSources: true,\n      hideGenerator: true,\n      excludePrivate: true,\n      excludeProtected: true,\n      skipErrorChecking: true,\n      excludeExternals: true,\n      jsDocCompatibility: false,\n      pretty: !MINIFY_JSON,\n    },\n    [new TSConfigReader(), new TypeDocReader()]\n  );\n\n  const project = await app.convert();\n\n  if (project) {\n    await app.generateJson(project, jsonOutputPath);\n    const output = await fs.readJson(jsonOutputPath);\n    output.name = jsonFileName;\n\n    if (Array.isArray(entryPoint)) {\n      const filterEntries = entryPoint.map((entry) =>\n        entry.substring(0, entry.lastIndexOf(\".\"))\n      );\n      output.children = output.children\n        .filter((entry) => filterEntries.includes(entry.name))\n        .map((entry) => entry.children)\n        .flat()\n        .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    const { readme, symbolIdMap, ...trimmedOutput } = output;\n\n    if (MINIFY_JSON) {\n      const minifiedJson = recursiveOmitBy(\n        trimmedOutput,\n        ({ key, node }) =>\n          [\"id\", \"groups\", \"target\", \"kindString\", \"originalName\"].includes(\n            key\n          ) ||\n          (key === \"flags\" && !Object.keys(node).length)\n      );\n      await fs.writeFile(jsonOutputPath, JSON.stringify(minifiedJson, null, 0));\n    } else {\n      await fs.writeFile(jsonOutputPath, JSON.stringify(trimmedOutput));\n    }\n  } else {\n    throw new Error(\n      `ðŸ’¥ Failed to extract API data from source code for '${packageName}' package.`\n    );\n  }\n};\n"]}