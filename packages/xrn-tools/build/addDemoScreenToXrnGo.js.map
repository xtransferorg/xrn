{"version":3,"file":"addDemoScreenToXrnGo.js","sourceRoot":"","sources":["../src/addDemoScreenToXrnGo.ts"],"names":[],"mappings":";;;AACA,uDAA+C;AAC/C,2CAAoD;AAE7C,MAAM,oBAAoB,GAAG,KAAK,EAAE,EACzC,WAAW,GACU,EAAE,EAAE;IACzB,IAAI,CAAC;QACH,cAAc;QACd,+DAA+D;QAE/D,MAAM,GAAG,GAAG,sBAAO,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QAEjD,IAAI,CAAC,GAAG,EAAE,CAAC;YACT,OAAO,CAAC,KAAK,CAAC,WAAW,WAAW,YAAY,CAAC,CAAC;YAClD,OAAO;QACT,CAAC;QAED,IAAI,GAAG,CAAC,UAAU,EAAE,EAAE,cAAc,EAAE,CAAC;YACrC,MAAM,GAAG,CAAC,iBAAiB,EAAE,CAAC;QAChC,CAAC;aAAM,CAAC;YACN,MAAM,GAAG,CAAC,cAAc,EAAE,CAAC;YAC3B,MAAM,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACjC,CAAC;QAED,MAAM,OAAO,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;QAEjC,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,WAAW,WAAW,aAAa,CAAC,CAAC;YACnD,OAAO;QACT,CAAC;QAED,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,OAAO,CAAC,CAAC;QAEnC,MAAM,OAAO,GAAG,mBAAU,CAAC,MAAM,EAAE,CAAC;QAEpC,gCAAgC;QAChC,MAAM,OAAO,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;QAE1C,mCAAmC;QACnC,uCAAuC;QACvC,MAAM,MAAM,CAAC,eAAe,EAAE,CAAC;QAE/B,4BAA4B;QAC5B,MAAM,OAAO,CAAC,yBAAyB,EAAE,CAAC;IAC5C,CAAC;IAAC,OAAO,KAAU,EAAE,CAAC;QACpB,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAC/B,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAChC,CAAC;AACH,CAAC,CAAC;AA7CW,QAAA,oBAAoB,wBA6C/B","sourcesContent":["import { AddDemoScreenToXrnGo } from \"./types\";\nimport { Package } from \"./utils/PackageUtils\";\nimport { Screen, ScreenList } from \"./utils/Screen\";\n\nexport const addDemoScreenToXrnGo = async ({\n  packageName,\n}: AddDemoScreenToXrnGo) => {\n  try {\n    // 获取当前包路径和版本号\n    // const packageJson = await getPackageJsonByName(packageName);\n\n    const pkg = Package.fromPackageName(packageName);\n\n    if (!pkg) {\n      console.error(`Package ${packageName} not found`);\n      return;\n    }\n\n    if (pkg.getXrnMeta()?.exportFromCore) {\n      await pkg.installToXtRnCore();\n    } else {\n      await pkg.installToXrnGo();\n      await pkg.installToXrnGoMain();\n    }\n\n    const xrnMeta = pkg.getXrnMeta();\n\n    if (!xrnMeta) {\n      console.error(`Package ${packageName} 没有 xrnMeta`);\n      return;\n    }\n\n    const screen = new Screen(xrnMeta);\n\n    const screens = ScreenList.create();\n\n    // 在screen配置文件中添加指定包，包括处理包名格式等功能\n    await screens.addPackageToScreenJson(pkg);\n\n    // 在screens目录下生成基本的Demo文件和内容，方便快速开发\n    // await screens.generateScreenFiles();\n    await screen.writeScreenFile();\n\n    // 生成 Demo screen 的导入和路由相关配置\n    await screens.generateNavigationScreens();\n  } catch (error: any) {\n    console.error(`Failed to add`);\n    console.error(error?.message);\n  }\n};\n"]}